[General]
# HZP scan strategy, possible values are "classic", "inplace". Default is "classic"
HZP_scan_strategy=inplace
hazard_pointer_count=72

# cds::gc::DHP initialization parameters
dhp_liberate_threshold=1024
dhp_init_guard_count=16
dhp_epoch_count=16

# cds::urcu::gc initialization parameters
rcu_buffer_size=256

[Atomic_ST]
iterCount=1000000

[thread_init_fini]
ThreadCount=8
PassCount=100000

[Allocator_ST]
PassCount=10
# Total allocation per pass, Megabytes
AllocPerPass=1024

[Linux_Scale]
# Allocation count per test
PassCount=10000000
# Max allocated block size in bytes
MaxBlockSize=66000
# Max thread count. 0 is processor_count * 2
MaxThreadCount=0

[Hoard_ThreadTest]
MinBlockSize=16
MaxBlockSize=1024
BlockCount=10000
PassCount=500
# Max thread count. 0 is processor_count * 2
MaxThreadCount=0

[Larson]
MinBlockSize=8
MaxBlockSize=1024
BlocksPerThread=1000
PassCount=5000000
# Max thread count. 0 is processor_count * 2
MaxThreadCount=0

[Random_Alloc]
DataSize=1000
MinBlockSize=8
MaxBlockSize=100000
PassCount=500000
# Max thread count. 0 is processor_count * 2
MaxThreadCount=0

[Spinlock_MT]
ThreadCount=8
LoopCount=1000000

[Stack_Push]
ThreadCount=8
StackSize=2000000
EliminationSize=4

[Stack_PushPop]
PushThreadCount=16
PopThreadCount=16
StackSize=16000000
EliminationSize=4

[IntrusiveStack_PushPop]
PushThreadCount=16
PopThreadCount=16
StackSize=32000000
EliminationSize=4
# Flat combining stack parameters
# FCIterate=1 - the test will be run iteratively
#   for combine pass count from 1 to FCCombinePassCount
#   and compact factor from 1 to FCCompactFactor
# FCIterate=0 - the test runs only once for giving
#   FCCombinePassCount and FCCompactFactor
FCIterate=0
FCCombinePassCount=8
FCCompactFactor=64

[queue_push]
ThreadCount=8
QueueSize=5000000
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[queue_pop]
ThreadCount=8
QueueSize=5000000
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[queue_push_pop]
ConsumerCount=4
ProducerCount=4
QueueSize=5000000
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[queue_random]
ThreadCount=8
QueueSize=5000000
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[intrusive_queue_push_pop]
ReaderCount=4
WriterCount=4
QueueSize=5000000
# Flat combining queue parameters
FCCompactFactor=64
FCPassCount=8
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[bounded_queue_fulness]
ThreadCount=8
QueueSize=1024
PassCount=1000000

[pqueue_pop]
ThreadCount=8
QueueSize=10000000

[pqueue_push]
ThreadCount=8
QueueSize=10000000

[pqueue_push_pop]
PushThreadCount=4
PopThreadCount=4
QueueSize=10000000

[map_find_int]
ThreadCount=8
MapSize=2000000
PercentExists=50
PassCount=1
MaxLoadFactor=4

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[map_find_string]
ThreadCount=8
MapSize=2000000
PercentExists=50
PassCount=2
MaxLoadFactor=4

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[Map_InsDel_int]
InsertThreadCount=4
DeleteThreadCount=4
ThreadPassCount=2
MapSize=1000000
MaxLoadFactor=4
PrintGCStateFlag=1
# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[map_insdel_func]
InsertThreadCount=4
DeleteThreadCount=4
UpdateThreadCount=4
ThreadPassCount=2
MapSize=1000000
MaxLoadFactor=4
PrintGCStateFlag=1
# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[Map_InsDel_Item_int]
ThreadCount=8
MapSize=10000
GoalItem=5000
AttemptCount=10000
MaxLoadFactor=4
PrintGCStateFlag=1
# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0
# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[map_insdel_string]
InsertThreadCount=4
DeleteThreadCount=4
ThreadPassCount=2
MapSize=500000
MaxLoadFactor=4

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[Map_InsDel_Item_string]
ThreadCount=8
MapSize=10000
GoalItemIndex=5000
AttemptCount=10000
MaxLoadFactor=4
PrintGCStateFlag=1
# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0
# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[Map_InsFind_int]
ThreadCount=0
MapSize=5000
MaxLoadFactor=4
PrintGCStateFlag=1
# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4

[map_insdelfind]
InitialMapSize=500000
ThreadCount=8
MaxLoadFactor=4
InsertPercentage=20
DeletePercentage=20
Duration=15

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4


[map_delodd]
MapSize=1000000
InsThreadCount=4
DelThreadCount=3
ExtractThreadCount=3
MaxLoadFactor=4

#Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=10
FeldmanMapArrayBits=4
